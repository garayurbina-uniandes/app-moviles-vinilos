// Generated by view binder compiler. Do not edit!
package com.vinylsMobile.vinylsApplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.vinylsMobile.vinylsApplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTrackAlbumBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final CoordinatorLayout addTrackAlbum;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final Button btnCreateTrackAlbum;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final TextView nameAlbum;

  @NonNull
  public final ScrollView scrollView2;

  @NonNull
  public final TextInputLayout textInputLayoutMin;

  @NonNull
  public final TextInputLayout textInputLayoutName;

  @NonNull
  public final TextInputLayout textInputLayoutSeg;

  @NonNull
  public final TextInputEditText textMin;

  @NonNull
  public final TextInputEditText textSeg;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextInputEditText txtName;

  private ActivityTrackAlbumBinding(@NonNull CoordinatorLayout rootView,
      @NonNull CoordinatorLayout addTrackAlbum, @NonNull AppBarLayout appBarLayout,
      @NonNull Button btnCreateTrackAlbum, @NonNull ConstraintLayout constraintLayout,
      @NonNull TextView nameAlbum, @NonNull ScrollView scrollView2,
      @NonNull TextInputLayout textInputLayoutMin, @NonNull TextInputLayout textInputLayoutName,
      @NonNull TextInputLayout textInputLayoutSeg, @NonNull TextInputEditText textMin,
      @NonNull TextInputEditText textSeg, @NonNull Toolbar toolbar,
      @NonNull TextInputEditText txtName) {
    this.rootView = rootView;
    this.addTrackAlbum = addTrackAlbum;
    this.appBarLayout = appBarLayout;
    this.btnCreateTrackAlbum = btnCreateTrackAlbum;
    this.constraintLayout = constraintLayout;
    this.nameAlbum = nameAlbum;
    this.scrollView2 = scrollView2;
    this.textInputLayoutMin = textInputLayoutMin;
    this.textInputLayoutName = textInputLayoutName;
    this.textInputLayoutSeg = textInputLayoutSeg;
    this.textMin = textMin;
    this.textSeg = textSeg;
    this.toolbar = toolbar;
    this.txtName = txtName;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTrackAlbumBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTrackAlbumBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_track_album, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTrackAlbumBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CoordinatorLayout addTrackAlbum = (CoordinatorLayout) rootView;

      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.btn_create_track_Album;
      Button btnCreateTrackAlbum = ViewBindings.findChildViewById(rootView, id);
      if (btnCreateTrackAlbum == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.nameAlbum;
      TextView nameAlbum = ViewBindings.findChildViewById(rootView, id);
      if (nameAlbum == null) {
        break missingId;
      }

      id = R.id.scrollView2;
      ScrollView scrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView2 == null) {
        break missingId;
      }

      id = R.id.textInputLayout_min;
      TextInputLayout textInputLayoutMin = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutMin == null) {
        break missingId;
      }

      id = R.id.textInputLayout_name;
      TextInputLayout textInputLayoutName = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutName == null) {
        break missingId;
      }

      id = R.id.textInputLayout_seg;
      TextInputLayout textInputLayoutSeg = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutSeg == null) {
        break missingId;
      }

      id = R.id.text_min;
      TextInputEditText textMin = ViewBindings.findChildViewById(rootView, id);
      if (textMin == null) {
        break missingId;
      }

      id = R.id.text_seg;
      TextInputEditText textSeg = ViewBindings.findChildViewById(rootView, id);
      if (textSeg == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.txt_name;
      TextInputEditText txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      return new ActivityTrackAlbumBinding((CoordinatorLayout) rootView, addTrackAlbum,
          appBarLayout, btnCreateTrackAlbum, constraintLayout, nameAlbum, scrollView2,
          textInputLayoutMin, textInputLayoutName, textInputLayoutSeg, textMin, textSeg, toolbar,
          txtName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
